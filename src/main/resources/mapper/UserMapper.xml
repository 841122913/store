<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.store.mapper.UserMapper">

<!--    id自定义
        type 对应实体类
-->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
<!--实体类与数据库名称不一致的字段进行匹配指定，名称一致的可以省略不写，主键不能省略！
    column是数据库内表的字段名， property 为实体类的另存为名称
-->
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>
<!--        借助标签来增删查改操作-->

<!--id为mapper接口中的方法名称，再在标签内部写sql语句
    +namespace定位可以指定一条sql语句对应一个接口中的一个方法
    -->
<!--keyProperty  keyProperty设置主键 useGeneratedKeys 字段（主键）自增-->
<!--    空格换行等格式 要在values左右对应，否则sql错误-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO
            t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
        (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <select id="findByUsername" resultMap="UserEntityMap">
        select *from t_user where username = #{username}
    </select>
</mapper>